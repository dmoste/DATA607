View(math1)
math1 <- inner_join(math_1,geometry_html, by = "Subgroup")
math1 <- inner_join(algebra1_html, algebra2_html, by = "Subgroup")
math1 <- inner_join(math_1,geometry_html, by = "Subgroup")
math1 <- inner_join(math1,geometry_html, by = "Subgroup")
View(math1)
physics_html[1,4]
View(physics_html)
physics_html[2,4]
View(physics_html)
non_science <- c(ela_html,algebra1_html,geometry_html,
algebra2_html,global_html,us_html)
science <- c(living_html,earth_html,chemistry_html,physics_html)
View(algebra1_html)
html_data.append(html[2,4])
list.append(html_data,html[2,4])
html_data <- rbind(html[2,4])
for(html in non_science){
html_data <- rbind(html[2,4])
}
physics_html[2,4]
library(rvest)
library(ggplot2)
library(tidyverse)
url <- "https://data.nysed.gov/essa.php?instid=800000077852&year=2019&createreport=1&regents=1"
regents_html <- url %>%
read_html() %>%
html_nodes("table") %>%
html_table(fill = TRUE)
ela_html <- regents_html[[1]]
algebra1_html <- regents_html[[2]]
geometry_html <- regents_html[[3]]
algebra2_html <- regents_html[[4]]
global_html <- regents_html[[5]]
living_html <- regents_html[[6]]
earth_html <- regents_html[[7]]
chemistry_html <- regents_html[[8]]
physics_html <- regents_html[[9]]
us_html <- regents_html[[11]]
non_science <- c(ela_html,algebra1_html,geometry_html,
algebra2_html,global_html,us_html)
science <- c(living_html,earth_html,chemistry_html,physics_html)
## this shit is messy...
names(ela_html) <- c("Subgroup","Tested","Number 1","Level 1","Number 2","Level 2",
"Number 3","Level 3","Number 4","Level 4",
"Number 5","Level 5","Number Prof","Proficient")
names(algebra1_html) <- c("Subgroup","Tested","Number 1","Level 1","Number 2","Level 2",
"Number 3","Level 3","Number 4","Level 4",
"Number 5","Level 5","Number Prof","Proficient")
names(geometry_html) <- c("Subgroup","Tested","Number 1","Level 1","Number 2","Level 2",
"Number 3","Level 3","Number 4","Level 4",
"Number 5","Level 5","Number Prof","Proficient")
names(algebra2_html) <- c("Subgroup","Tested","Number 1","Level 1","Number 2","Level 2",
"Number 3","Level 3","Number 4","Level 4",
"Number 5","Level 5","Number Prof","Proficient")
names(global_html) <- c("Subgroup","Tested","Number 1","Level 1","Number 2","Level 2",
"Number 3","Level 3","Number 4","Level 4",
"Number 5","Level 5","Number Prof","Proficient")
names(us_html) <- c("Subgroup","Tested","Number 1","Level 1","Number 2","Level 2",
"Number 3","Level 3","Number 4","Level 4",
"Number 5","Level 5","Number Prof","Proficient")
names(living_html) <- c("Subgroup","Tested","Number 1","Level 1","Number 2","Level 2",
"Number 3","Level 3","Number 4","Level 4",
"Number Prof","Proficient")
names(earth_html) <- c("Subgroup","Tested","Number 1","Level 1","Number 2","Level 2",
"Number 3","Level 3","Number 4","Level 4",
"Number Prof","Proficient")
names(chemistry_html) <- c("Subgroup","Tested","Number 1","Level 1","Number 2","Level 2",
"Number 3","Level 3","Number 4","Level 4",
"Number Prof","Proficient")
names(physics_html) <- c("Subgroup","Tested","Number 1","Level 1","Number 2","Level 2",
"Number 3","Level 3","Number 4","Level 4",
"Number Prof","Proficient")
regents_csv <- read.csv("https://github.com/dmoste/DATA607/raw/master/Final/Grades.csv", header = TRUE)
math1 <- inner_join(algebra1_html, algebra2_html, by = "Subgroup")
math1 <- inner_join(math1,geometry_html, by = "Subgroup")
physics_html[2,4]
html_data <- c()
for(html in non_science){
html_data <- rbind(html[2,4])
}
print(html)
html_data <- c()
for(html in non_science){
print(html)
html_data <- rbind(html[2,4])
}
View(non_science)
non_science
library(rvest)
library(ggplot2)
library(tidyverse)
url <- "https://data.nysed.gov/essa.php?instid=800000077852&year=2019&createreport=1&regents=1"
regents_html <- url %>%
read_html() %>%
html_nodes("table") %>%
html_table(fill = TRUE)
ela_html <- regents_html[[1]]
algebra1_html <- regents_html[[2]]
geometry_html <- regents_html[[3]]
algebra2_html <- regents_html[[4]]
global_html <- regents_html[[5]]
living_html <- regents_html[[6]]
earth_html <- regents_html[[7]]
chemistry_html <- regents_html[[8]]
physics_html <- regents_html[[9]]
us_html <- regents_html[[11]]
small <- c(ela_html,algebra1_html,geometry_html,
algebra2_html,global_html,us_html)
big <- c(living_html,earth_html,chemistry_html,physics_html)
## this shit is messy...
names(ela_html) <- c("Subgroup","Tested","Number 1","Level 1","Number 2","Level 2",
"Number 3","Level 3","Number 4","Level 4",
"Number 5","Level 5","Number Prof","Proficient")
names(algebra1_html) <- c("Subgroup","Tested","Number 1","Level 1","Number 2","Level 2",
"Number 3","Level 3","Number 4","Level 4",
"Number 5","Level 5","Number Prof","Proficient")
names(geometry_html) <- c("Subgroup","Tested","Number 1","Level 1","Number 2","Level 2",
"Number 3","Level 3","Number 4","Level 4",
"Number 5","Level 5","Number Prof","Proficient")
names(algebra2_html) <- c("Subgroup","Tested","Number 1","Level 1","Number 2","Level 2",
"Number 3","Level 3","Number 4","Level 4",
"Number 5","Level 5","Number Prof","Proficient")
names(global_html) <- c("Subgroup","Tested","Number 1","Level 1","Number 2","Level 2",
"Number 3","Level 3","Number 4","Level 4",
"Number 5","Level 5","Number Prof","Proficient")
names(us_html) <- c("Subgroup","Tested","Number 1","Level 1","Number 2","Level 2",
"Number 3","Level 3","Number 4","Level 4",
"Number 5","Level 5","Number Prof","Proficient")
names(living_html) <- c("Subgroup","Tested","Number 1","Level 1","Number 2","Level 2",
"Number 3","Level 3","Number 4","Level 4",
"Number Prof","Proficient")
names(earth_html) <- c("Subgroup","Tested","Number 1","Level 1","Number 2","Level 2",
"Number 3","Level 3","Number 4","Level 4",
"Number Prof","Proficient")
names(chemistry_html) <- c("Subgroup","Tested","Number 1","Level 1","Number 2","Level 2",
"Number 3","Level 3","Number 4","Level 4",
"Number Prof","Proficient")
names(physics_html) <- c("Subgroup","Tested","Number 1","Level 1","Number 2","Level 2",
"Number 3","Level 3","Number 4","Level 4",
"Number Prof","Proficient")
regents_csv <- read.csv("https://github.com/dmoste/DATA607/raw/master/Final/Grades.csv", header = TRUE)
math1 <- inner_join(algebra1_html, algebra2_html, by = "Subgroup")
math1 <- inner_join(math1,geometry_html, by = "Subgroup")
physics_html[2,4]
html_data <- c()
for(html in small){
print(html)
html_data <- rbind(html[2,4])
}
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(dplyr)
df <- read.csv("https://raw.githubusercontent.com/pmalo46/SPRING2020TIDYVERSE/master/BacheloretteDSFinal-Dogu.csv")
View(df)
sample_n(df,20,replace = FALSE)
sample_frac(df,0.5,replace = FALSE)
group_by(df, State) %>%
summarise(mean(Height..cm.)) %>%
top_n(5, Height..cm.)
group_by(df, State) %>%
summarise(mean(Height..cm.))
group_by(df, State) %>%
summarise(mean(Height..cm.)) %>%
top_n(5, mean(Height..cm.))
group_by(df, State) %>%
summarise(mean(Height..cm.)) %>%
top_n(5, `mean(Height..cm.)`)
?top_n
byState <- as_tibble(group_by(df, State)) %>%
summarise(mean(Height..cm.)) %>%
top_n(5, `mean(Height..cm.)`)
View(byState)
View(byState)
byState <- group_by(df, State) %>%
summarise(mean(Height..cm.)) %>%
top_n(5, `mean(Height..cm.)`)
View(byState)
byState <- group_by(df, State) %>%
summarise(mean(Height..cm.))
View(byState)
byState <- group_by(df, State) %>%
summarise(mean(Height..cm.)) %>%
top_n(4, `mean(Height..cm.)`)
View(byState)
View(byState)
byState <- group_by(df, State) %>%
summarise(mean(Height..cm.)) %>%
top_n(5, `mean(Height..cm.)`)
byState <- group_by(df, State) %>%
summarise(mean(Height..cm.)) %>%
top_n(6, `mean(Height..cm.)`)
View(byState)
?count
count(df,College)
top_n(count(df,College),5)
topCollege <- top_n(count(df,College),5)
topHairColor <- top_n(count(df,Hair.Color),5)
topEyeColor <- top_n(count(df,Eye.Color),5)
topCollege
topHairColor
topEyeColor
View(topCollege)
View(topEyeColor)
View(topHairColor)
data <- separate(data, Workout.Timestamp,
c("date", "time", "zone"),
sep = " ")
library(tidyverse)
library(lubridate)
setwd("~/R")
data <- read.csv("l_moste_workouts.csv", header = TRUE)
data <- separate(data, Workout.Timestamp,
c("date", "time", "zone"),
sep = " ")
View(data)
View(data)
data$date <- ymd(data$date)
View(data)
data$time <- hm(data$time)
View(data)
data <- select(data, -zone)
View(data)
data <- read.csv("l_moste_workouts.csv", header = TRUE)
data <- separate(data, Workout.Timestamp,
c("date", "time", "zone"),
sep = " ")
data$date <- ymd(data$date)
data$time <- hm(data$time)
data <- select(data, -zone, -Avg..Heartrate, -Avg..Incline, -Avg..Pace..min.mi.)
View(data)
totalTime <- (tapply(data$Length..minutes., data$date, sum))
dates <- unique(data$date, incomparables = FALSE, MARGIN = 1, fromLast = FALSE)
workouts <- data.frame(dates, totalTime)
ggplot(workouts, aes(dates,totalTime)) + geom_point()
summary(workouts$totalTime)
sum(workouts$totalTime)
cycles <- filter(data, Fitness.Discipline == "Cycling")
ggplot(cycles, aes(x = Workout.Timestamp, y = Avg..Watts)) + geom_point()
cycles <- filter(data, Fitness.Discipline == "Cycling")
ggplot(cycles, aes(x = date, y = Avg..Watts)) + geom_point()
m1 <- lm(Avg..Watts ~ date, data = cycles)
summary(m1)
plot(cycles$Avg..Watts ~ cycles$date)
abline(m1)
ggplot(cycles, aes(x = date, y = Avg..Watts, color = Instructor.Name)) + geom_point()
ggplot(cycles, aes(x = date, y = Avg..Watts, color = Length..minutes.)) +
geom_point()
data$Length..minutes. <- as.factor(data$Length..minutes.)
totalTime <- (tapply(data$Length..minutes., data$date, sum))
data <- read.csv("l_moste_workouts.csv", header = TRUE)
data <- separate(data, Workout.Timestamp,
c("date", "time", "zone"),
sep = " ")
data$date <- ymd(data$date)
data$time <- hm(data$time)
data <- select(data, -zone, -Avg..Heartrate, -Avg..Incline, -Avg..Pace..min.mi.)
totalTime <- (tapply(data$Length..minutes., data$date, sum))
dates <- unique(data$date, incomparables = FALSE, MARGIN = 1, fromLast = FALSE)
workouts <- data.frame(dates, totalTime)
ggplot(workouts, aes(dates,totalTime)) + geom_point()
summary(workouts$totalTime)
sum(workouts$totalTime)
cycles <- filter(data, Fitness.Discipline == "Cycling")
cycles$Length..minutes. <- as.factor(cycles$Length..minutes.)
ggplot(cycles, aes(x = date, y = Avg..Watts, color = Length..minutes.)) +
geom_point()
library(tidyverse)
library(lubridate)
setwd("~/R")
data <- read.csv("dmoste_workouts.csv", header = TRUE)
data <- separate(data, Workout.Timestamp,
c("date", "time", "zone"),
sep = " ")
data$date <- ymd(data$date)
data$time <- hm(data$time)
data <- select(data, -zone, -Avg..Heartrate, -Avg..Incline, -Avg..Pace..min.mi.)
totalTime <- (tapply(data$Length..minutes., data$date, sum))
dates <- unique(data$date, incomparables = FALSE, MARGIN = 1, fromLast = FALSE)
workouts <- data.frame(dates, totalTime)
ggplot(workouts, aes(dates,totalTime)) + geom_point()
summary(workouts$totalTime)
sum(workouts$totalTime)
cycles <- filter(data, Fitness.Discipline == "Cycling")
cycles$Length..minutes. <- as.factor(cycles$Length..minutes.)
ggplot(cycles, aes(x = date, y = Avg..Watts, color = Length..minutes.)) +
geom_point()
m1 <- lm(Avg..Watts ~ date, data = cycles)
summary(m1)
plot(cycles$Avg..Watts ~ cycles$date)
abline(m1)
View(data)
totalWorkouts <- (tapply(data$date, count))
View(data)
totalWorkouts <- (tapply(data$Title, data$date, count))
totalWorkouts <- (tapply(data$Length..minutes., data$date, count))
totalTime <- (tapply(data$Length..minutes., data$date, sum))
totalWorkouts <- (tapply(data$Title, data$date, sum))
totalWorkouts <- (tapply(data$Title, data$date, length))
workoutDF <- data.frame(dates,totalWorkouts)
ggplot(timeDF, aes(x = dates, y = totalTime)) + geom_point()
timeDF <- data.frame(dates, totalTime)
totalWorkouts <- (tapply(data$Title, data$date, length))
workoutDF <- data.frame(dates,totalWorkouts)
ggplot(timeDF, aes(x = dates, y = totalTime)) + geom_point()
ggplot(workoutDF, aes(x = dates, y = totalWorkouts)) + geom_point()
ggplot(workoutDF, aes(x = dates, y = totalWorkouts)) + geom_bar()
ggplot(workoutDF, aes(x = dates, y = totalWorkouts)) + geom_bar(stat = "identity")
ggplot(timeDF, aes(x = dates, y = totalTime)) + geom_bar(stat = "identity")
totalWorkouts <- tapply(data$Title, data$date, length)
totalTime <- tapply(data$Length..minutes., data$date, sum)
ggplot(workoutDF, aes(x = dates, y = totalWorkouts)) +
geom_bar(stat = "identity")
library(tidyverse)
library(lubridate)
setwd("~/R")
data <- read.csv("l_moste_workouts.csv", header = TRUE)
data <- separate(data, Workout.Timestamp,
c("date", "time", "zone"),
sep = " ")
data$date <- ymd(data$date)
data$time <- hm(data$time)
data <- select(data, -zone, -Avg..Heartrate, -Avg..Incline, -Avg..Pace..min.mi.)
totalTime <- tapply(data$Length..minutes., data$date, sum)
dates <- unique(data$date, incomparables = FALSE, MARGIN = 1, fromLast = FALSE)
timeDF <- data.frame(dates, totalTime)
totalWorkouts <- tapply(data$Title, data$date, length)
workoutDF <- data.frame(dates,totalWorkouts)
ggplot(timeDF, aes(x = dates, y = totalTime)) + geom_bar(stat = "identity")
ggplot(workoutDF, aes(x = dates, y = totalWorkouts)) +
geom_bar(stat = "identity")
sum(timeDF$totalTime)
cycles <- filter(data, Fitness.Discipline == "Cycling")
cycles$Length..minutes. <- as.factor(cycles$Length..minutes.)
ggplot(cycles, aes(x = date, y = Avg..Watts, color = Length..minutes.)) +
geom_point()
m1 <- lm(Avg..Watts ~ date, data = cycles)
summary(m1)
plot(cycles$Avg..Watts ~ cycles$date)
abline(m1)
ggplot(cycles,
aes(x = Length..minutes., y = Avg..Watts, color = Instructor.Name)) +
geom_point()
library(tidyverse)
library(lubridate)
setwd("~/R")
data <- read.csv("dmoste_workouts.csv", header = TRUE)
data <- separate(data, Workout.Timestamp,
c("date", "time", "zone"),
sep = " ")
data$date <- ymd(data$date)
data$time <- hm(data$time)
data <- select(data, -zone, -Avg..Heartrate, -Avg..Incline, -Avg..Pace..min.mi.)
totalTime <- tapply(data$Length..minutes., data$date, sum)
dates <- unique(data$date, incomparables = FALSE, MARGIN = 1, fromLast = FALSE)
timeDF <- data.frame(dates, totalTime)
totalWorkouts <- tapply(data$Title, data$date, length)
workoutDF <- data.frame(dates,totalWorkouts)
ggplot(timeDF, aes(x = dates, y = totalTime)) + geom_bar(stat = "identity")
ggplot(workoutDF, aes(x = dates, y = totalWorkouts)) +
geom_bar(stat = "identity")
sum(timeDF$totalTime)
cycles <- filter(data, Fitness.Discipline == "Cycling")
cycles$Length..minutes. <- as.factor(cycles$Length..minutes.)
ggplot(cycles, aes(x = date, y = Avg..Watts, color = Length..minutes.)) +
geom_point()
m1 <- lm(Avg..Watts ~ date, data = cycles)
summary(m1)
plot(cycles$Avg..Watts ~ cycles$date)
abline(m1)
ggplot(cycles,
aes(x = Length..minutes., y = Avg..Watts, color = Instructor.Name)) +
geom_point()
ggplot(cycles, aes(x = Avg..Watts, y = Instructor.Name)) +
geom_bar(stat = "identity")
ggplot(cycles, aes(x = Instructor.Name, y = Avg..Watts)) +
geom_bar(stat = "identity")
ggplot(cycles, aes(x = Instructor.Name, y = Avg..Watts)) +
geom_bar(stat = "identity") + coord_flip()
ggplot(cycles, aes(x = Instructor.Name, y = reordr(-Avg..Watts))) +
geom_bar(stat = "identity") + coord_flip()
ggplot(cycles, aes(x = Instructor.Name, y = reordor(-Avg..Watts))) +
geom_bar(stat = "identity") + coord_flip()
ggplot(cycles, aes(x = Instructor.Name, y = reorder(-Avg..Watts))) +
geom_bar(stat = "identity") + coord_flip()
ggplot(cycles, aes(x = reorder(Instructor.Name, Avg..Watts.), y = Avg..Watts)) +
geom_bar(stat = "identity") + coord_flip()
ggplot(cycles, aes(x = reorder(Instructor.Name, Avg..Watts), y = Avg..Watts)) +
geom_bar(stat = "identity") + coord_flip()
ggplot(cycles, aes(x = reorder(Instructor.Name, -Avg..Watts), y = Avg..Watts)) +
geom_bar(stat = "identity") + coord_flip()
ggplot(cycles, aes(x = reorder(Instructor.Name, -Avg..Watts), y = Avg..Watts)) +
geom_bar(stat = "identity") + coord_flip()
ggplot(cycles, aes(x = reorder(Instructor.Name, -Avg..Watts), y = Avg..Watts)) +
geom_bar(stat = "identity") + coord_flip()
ggplot(cycles, aes(x = reorder(Instructor.Name, Avg..Watts), y = Avg..Watts)) +
geom_bar(stat = "identity") + coord_flip()
View(cycles)
ggplot(cycles, aes(x = reorder(Instructor.Name, Avg..Watts), y = mean(Avg..Watts))) +
geom_bar(stat = "identity") + coord_flip()
ggplot(cycles, aes(x = reorder(Instructor.Name, Avg..Watts), y = Avg..Watts)) +
geom_bar(stat = "identity") + coord_flip()
setwd("~/CUNY/DATA606/Final Project")
grades <- read.csv("Grades.csv", header = TRUE)
View(grades)
m1 <- lm(Regents.Score ~ MP4, grades)
summary(m1)
plot(grades$MP4, grades$Regents.Score)
abline(m1)
library(DATA606)
plot_ss(data$MP4, data$Regents.Score)
class(data$Regents.Score)
plot_ss(grades$MP4, grades$Regents.Score)
View(m1)
plot(m1$residuals)
plot(m1$residuals ~ grades$MP4)
hist(m1$residuals)
grades <- read.csv("https://github.com/dmoste/DATA606/raw/master/Grades.csv", header = TRUE)
m1 <- lm(Regents.Score ~ MP4, grades)
summary(m1)
grades <- read.csv("https://github.com/dmoste/DATA606/raw/master/Grades.csv", header = TRUE)
m1 <- lm(Regents.Score ~ MP4, grades)
summary(m1)
plot(m1$residuals ~ grades$MP4)
hist(m1$residuals)
plot(grades$MP4, grades$Regents.Score)
abline(m1)
View(grades)
ggplot(grades, aes(x = MP4, y = Regents.Score, color = "Course")) + geom_point()
ggplot(grades, aes(x = MP4, y = Regents.Score, color = Course)) + geom_point()
abline(m1)
ggplot(grades, aes(x = MP4, y = Regents.Score, color = Course)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(grades, aes(x = MP4, y = Regents.Score, color = Race)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
?train
train(Regents.Score ~ grades, method = "cv")
library(generics)
train(Regents.Score ~ grades, method = "cv")
train(grades)
train(grades$Regents.Score)
model1 <- glm(Regents.Score ~ MP4, binomial)
model1 <- glm(grades$Regents.Score ~ grades$MP4, binomial)
install.packages("rpart")
library(rpart)
fit <- rpart(Regents.Score ~ MP4, data = grades)
plot(fit)
text(fit, use.n = TRUE)
library(tm)
library(tidytext)
ham_corpus <- VCorpus(DirSource(directory = "./easy_ham/"))
tidy_ham <- tidy(ham_corpus)
ham_text <- tidy_ham %>%
unnest_tokens(words, text) %>%
mutate(spam = 0)
spam_corpus <- VCorpus(DirSource(directory = "./spam_2/"))
tidy_spam <- tidy(spam_corpus)
spam_text <- tidy_spam %>%
unnest_tokens(words, text) %>%
mutate(spam = 1)
df <- rbind(ham_text, spam_text) %>%
filter(id != "cmds") %>%
select(-author, -datetimestamp, -description, -heading, -language, -origin)
df$index <- 1:nrow(df)
training_data <- sample_frac(df, 0.75, replace = FALSE)
holdout_data <- anti_join(df, training_data, by = "index")
############################################################################
training_data <- training_data %>%
group_by(words) %>%
mutate(word_avg = mean(spam)) %>%
group_by(id) %>%
mutate(total = sum(word_avg)) %>%
mutate(document_avg = mean(word_avg))
model_data <- training_data %>%
distinct(id, spam, document_avg)
fit <- rpart(spam ~ words, data = holdout_data)
plot(fit)
text(fit, use.n = TRUE)
setwd("~/CUNY/DATA607/Projects/Project 4")
library(tm)
library(tidytext)
ham_corpus <- VCorpus(DirSource(directory = "./easy_ham/"))
tidy_ham <- tidy(ham_corpus)
ham_text <- tidy_ham %>%
unnest_tokens(words, text) %>%
mutate(spam = 0)
spam_corpus <- VCorpus(DirSource(directory = "./spam_2/"))
tidy_spam <- tidy(spam_corpus)
spam_text <- tidy_spam %>%
unnest_tokens(words, text) %>%
mutate(spam = 1)
df <- rbind(ham_text, spam_text) %>%
filter(id != "cmds") %>%
select(-author, -datetimestamp, -description, -heading, -language, -origin)
df$index <- 1:nrow(df)
training_data <- sample_frac(df, 0.75, replace = FALSE)
holdout_data <- anti_join(df, training_data, by = "index")
############################################################################
training_data <- training_data %>%
group_by(words) %>%
mutate(word_avg = mean(spam)) %>%
group_by(id) %>%
mutate(total = sum(word_avg)) %>%
mutate(document_avg = mean(word_avg))
model_data <- training_data %>%
distinct(id, spam, document_avg)
fit <- rpart(spam ~ words, data = holdout_data)
plot(fit)
text(fit, use.n = TRUE)
View(fit)
